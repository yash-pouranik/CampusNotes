<style>

  .auth-section {
    max-width: 420px;
    margin: 1px auto;
    padding: 40px;
    background: #fff;
    border-radius: 12px;

    text-align: center;
  }

  .auth-section h2 {
    font-size: 1.8rem;
    margin-bottom: 25px;
  }

  .auth-section form {
    display: flex;
    flex-direction: column;
    gap: 15px;
  }

  .auth-section input,
  .auth-section select {
    width: 100%;
    padding: 12px 14px;
    border: 1px solid #ccc;
    border-radius: 8px;
    font-size: 1rem;
    color: #333;
    background-color: #fff;
    transition: border 0.3s ease, box-shadow 0.3s ease;
  }

  .auth-section input:focus,
  .auth-section select:focus {
    border-color: #2563EB;
    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.2);
    outline: none;
  }

  /* Custom arrow for select */
  .auth-section select {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image: url('data:image/svg+xml;utf8,<svg fill="%23333" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/></svg>');
    background-repeat: no-repeat;
    background-position: right 12px center;
    background-size: 16px;
  }

  .auth-section button {
    padding: 12px;
    background-color: #2563EB;
    color: #fff;
    font-size: 1rem;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
  }

  .auth-section button:hover {
    background-color: #1d4ed8;
    transform: translateY(-2px);
  }

  .auth-section p {
    margin: 20px 0 10px;
    color: #555;
  }



</style>

<section class="auth-section">


    <!-- Google Sign-In -->
  <div id="g_id_onload"
       data-client_id="466885260272-86cp1p5tkpsspvrdp8n79h0gbfob48qq.apps.googleusercontent.com"
       data-context="signin"
       data-auto_select="true"
       data-itp_support="true"
       data-theme="filled_blue"
      data-text="signup_with"
       >
       
  </div>
  <div class="g_id_signin" data-type="standard"
  data-theme="filled_blue"
      data-text="signup_with"></div>

  <p>or</p>




  <h2>Sign Up with CampusNotes</h2>

  <form id="loginForm" action="/register" method="POST">
    <input type="text" name="username" placeholder="Username" required />
    <input type="text" name="name" placeholder="Full Name" />
    <input type="email" name="email" placeholder="Email" id="emailInput" required />

    <select name="course" required>
      <option disabled selected>Select Course</option>
      <option value="B.Tech CSE">B.Tech CSE</option>
      <option value="B.Tech IT">B.Tech IT</option>
      <option value="B.Tech ECE">B.Tech ECE</option>
      <option value="B.Tech ME">B.Tech ME</option>
      <option value="MBA">MBA</option>
      <option value="BBA">BBA</option>
      <option value="MCA">MCA</option>
      <option value="BCA">BCA</option>
    </select>

    <select name="gender" required>
      <option disabled selected>Select Gender</option>
      <option value="He/Him">He/Him</option>
      <option value="She/Her">She/Her</option>
      <option value="They/Them">They/Them</option>
      <option value="Other">Other</option>
    </select>

    <input type="password" name="password" placeholder="Password" required />
    <button type="submit">Sign Up</button>
  </form>

  <script>
  document.getElementById("loginForm").addEventListener("submit", function(e) {
    let emailField = document.getElementById("emailInput");
    emailField.value = emailField.value.toLowerCase().trim(); // lowercase + trim spaces
  });
</script>




</section>


<!-- Google Identity Script -->
<script src="https://accounts.google.com/gsi/client" async></script>

<script>
  function decodeJWT(token) {
    let base64Url = token.split(".")[1];
    let base64 = base64Url.replace(/-/g, "+").replace(/_/g, "/");
    let jsonPayload = decodeURIComponent(
      atob(base64)
        .split("")
        .map(c => "%" + ("00" + c.charCodeAt(0).toString(16)).slice(-2))
        .join("")
    );
    return JSON.parse(jsonPayload);
  }

  function handleCredentialResponse(response) {
  console.log("Encoded JWT ID token:", response.credential);
  const responsePayload = decodeJWT(response.credential);
  console.log("Decoded JWT:", responsePayload);

      // ✅ Send to backend
    fetch("/oauth2callback", {
      method: "POST",
      body: JSON.stringify({ credential: response.credential }),
      headers: { "Content-Type": "application/json" }
    })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        window.location.href = `/explore`;
      }
    });
  }



  window.onload = function () {
    google.accounts.id.initialize({
      client_id: "466885260272-86cp1p5tkpsspvrdp8n79h0gbfob48qq.apps.googleusercontent.com",
      callback: handleCredentialResponse
    });
    google.accounts.id.renderButton(
      document.querySelector(".g_id_signin"),
      { theme: "outline", size: "large" }
    );
  };
</script>


<script>
  document.getElementById("loginForm").addEventListener("submit", function (e) {
    let emailField = document.getElementById("emailInput");
    let username = this.username.value.trim();
    let name = this.name.value.trim();
    let password = this.password.value;
    let course = this.course.value;
    let gender = this.gender.value;

    // ✅ Normalize email
    emailField.value = emailField.value.toLowerCase().trim();

    // Username check
    if (username.length < 3) {
      alert("⚠️ Username must be at least 3 characters.");
      e.preventDefault();
      return;
    }

    // Full name check
    if (name && !/^[a-zA-Z\s]+$/.test(name)) {
      alert("⚠️ Name can only contain letters and spaces.");
      e.preventDefault();
      return;
    }

    // Email format check
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(emailField.value)) {
      alert("⚠️ Please enter a valid email address.");
      e.preventDefault();
      return;
    }

    // Password strength check
    const passRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d).{6,}$/;
    if (!passRegex.test(password)) {
      alert("⚠️ Password must be at least 6 characters, include 1 uppercase, 1 lowercase and 1 number.");
      e.preventDefault();
      return;
    }

    // Course check
    if (!course || course === "Select Course") {
      alert("⚠️ Please select your course.");
      e.preventDefault();
      return;
    }

    // Gender check
    if (!gender || gender === "Select Gender") {
      alert("⚠️ Please select your gender.");
      e.preventDefault();
      return;
    }
  });
</script>

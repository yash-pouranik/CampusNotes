<style>
  h3{
    margin-top: 0;
  }
  .explore-container {
    max-width: 1100px;
    margin: 5px auto;
    padding: 20px;
  }

  .explore-heading {
    text-align: center;
    font-size: 2.4rem;
    color: #1a1a3d;
    margin-bottom: 40px;
    position: relative;
  }

  .explore-heading::after {
    content: '';
    display: block;
    width: 80px;
    height: 3px;
    background-color: #00d80b;
    margin: 12px auto 0;
    border-radius: 6px;
  }

  /* Notes grid */
  .note-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 25px;
  }

  /* Note card */
/* Note card only */
.note-card {
  background: #ffffff;
  padding: 20px;
  border-radius: 16px;
  box-shadow: 0 4px 14px rgba(0, 0, 0, 0.034);
  transition: all 0.3s ease;
  display: flex;
  flex-direction: column;
  position: relative;
  overflow: hidden;
}

/* subtle gradient border effect */
.note-card::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 16px;
  padding: 2px;
  
  -webkit-mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
          mask-composite: exclude;
  pointer-events: none;
}

.note-card:hover {
  transform: translateY(-6px) scale(1.02);
  box-shadow: 0 10px 24px rgba(0, 0, 0, 0.12);
}

/* Title */
.note-card h3 {
  font-size: 1.2rem;
  font-weight: 600;
  color: #2d2d6b;
  margin-bottom: 8px;
}

/* Info text */
.note-card p {
  font-size: 0.92rem;
  color: #444;
  margin: 5px 0;
  line-height: 1.5;
}

/* Date */
.note-card time {
  display: block;
  font-size: 0.8rem;
  color: #888;
  margin-top: 10px;
}

/* View button inside card */
.note-card .view-link {
  margin-top: auto;
  align-self: flex-start; 
}
.note-card .view-link:hover {
  transform: translateY(-1.4px) scale(1.03);
  box-shadow: 0 8px 20px rgba(67, 56, 202, 0.25);
}



  /* View link button */
 .view-link {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 8px;

  background: linear-gradient(135deg, #2d1b69, #4338ca);
  color: #fff;
  font-weight: 500;
  font-size: 0.95rem;

  padding: 10px 18px;
  border-radius: 8px;
  text-decoration: none;

  width: fit-content;
  min-width: 10px;
  text-align: center;

  transition: all 0.3s ease;
}

.view-link:hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.18);
}


  /* Search + filter form */
  .search-filter-form {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
    margin-bottom: 30px;
  }

  .search-filter-form input,
  .search-filter-form select,
  .search-filter-form button {
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 8px;
    font-size: 1rem;
  }

  .search-filter-form button {
    background: #2b2b6b;
    color: #fff;
    cursor: pointer;
  }

  /* Most Voted link */
  .most-voted-link {
    display: inline-block;
    margin-bottom: 25px;
    background: linear-gradient(to right, #4CAF50, #81C784);
    color: #fff;
    padding: 10px 18px;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 500;
    transition: background 0.3s ease, transform 0.2s ease;
  }

  .most-voted-link:hover {
    background: linear-gradient(to right, #43A047, #66BB6A);
    transform: translateY(-2px);
  }

  /* Responsive tweaks */
  @media (max-width: 900px) {
    .note-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 650px) {
    .note-grid {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 500px) {
    .search-filter-form {
      flex-direction: column;
      align-items: stretch;
      gap: 12px;
    }

    p{
      margin: 0 !important;
    }

    .search-filter-form input,
    .search-filter-form select,
    .search-filter-form button {
      width: 100%;
      font-size: 0.9rem;
    }

    .most-voted-link {
      display: block;
      text-align: center;
      width: 60%;
    }
  }
  .filter-overlay {
  display: none;
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.5);
  z-index: 900;
}
.filter-overlay.active { display: block; }


  /* Filters */
  @media (min-width: 769px) {
    .desktop-filters { display: flex; }
    .filter-toggle-btn, .filter-sidebar { display: none; }
  }

  @media (max-width: 768px) {
    .desktop-filters { display: none; }

    .filter-toggle-btn {
      display: block;
      margin: 10px 0 20px 0;
      padding: 10px 15px;
      background: #2b2b6b;
      color: #fff;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-size: 1rem;
    }

    .filter-sidebar {
      position: fixed;
      top: 0;
      left: -100%;
      width: 75%;
      height: 100%;
      background: #fff;
      z-index: 1000;
      padding: 20px;
      box-shadow: 2px 0 8px rgba(0,0,0,0.2);
      transition: left 0.3s ease;
      overflow-y: auto;
    }

    .filter-sidebar.open { left: 0; }
  }
</style>

<div class="explore-container">
  <h1 class="explore-heading">Explore All Notes at SVVV</h1>

  <!-- Desktop Filters -->
  <form method="GET" action="/explore" class="search-filter-form desktop-filters">
    <input type="text" name="q" placeholder="Search by title or subject..."
           value="<%= typeof query !== 'undefined' ? query : '' %>">

    <select name="course">
      <option value="">All Courses</option>
      <% ["B.Tech CSE","B.Tech IT","B.Tech ECE","B.Tech ME","MBA","BBA","MCA","BCA"].forEach(c => { %>
        <option value="<%= c %>" <%= course === c ? "selected" : "" %>><%= c %></option>
      <% }) %>
    </select>

    <select name="semester">
      <option value="">All Semesters</option>
      <% ["I","II","III","IV","V","VI","VII","VIII","IX","X"].forEach(s => { %>
        <option value="<%= s %>" <%= semester === s ? "selected" : "" %>><%= s %></option>
      <% }) %>
    </select>

    <button type="submit">Apply Filters</button>
  </form>

  <!-- Mobile Toggle -->
  <button class="filter-toggle-btn" onclick="toggleFilters()">â˜° Filters</button>

  <!-- Mobile Sidebar -->
  <div class="filter-sidebar" id="filterSidebar">
    <button type="button" onclick="toggleFilters()" 
        style="background:none;border:none;font-size:1.5rem;cursor:pointer;float:right;">âœ–</button>

    <h3>Filters</h3>
    <form method="GET" action="/explore" class="search-filter-form" style="flex-direction: column;">
      <input type="text" name="q" placeholder="Search by title or subject..."
             value="<%= typeof query !== 'undefined' ? query : '' %>">

      <select name="course">
        <option value="">All Courses</option>
        <% ["B.Tech CSE","B.Tech IT","B.Tech ECE","B.Tech ME","MBA","BBA","MCA","BCA"].forEach(c => { %>
          <option value="<%= c %>" <%= course === c ? "selected" : "" %>><%= c %></option>
        <% }) %>
      </select>

      <select name="semester">
        <option value="">All Semesters</option>
        <% ["I","II","III","IV","V","VI","VII","VIII","IX","X"].forEach(s => { %>
          <option value="<%= s %>" <%= semester === s ? "selected" : "" %>><%= s %></option>
        <% }) %>
      </select>

      <button type="submit">Apply Filters</button>
    </form>
  </div>

  <a href="/most-voted" class="most-voted-link">Most Voted SVVV Notes</a>

  <% if (notes.length === 0) { %>
    <p style="text-align: center; font-size: 1.1rem; color: #666;">No SVVV notes uploaded yet.</p>
  <% } else { %>
    <div class="note-grid">
      <% notes.forEach(note => { %>
        <div class="note-card">
          <h3><%= note.title %></h3>
          <p><strong>Subject:</strong> <%= note.subject?.name || 'N/A' %></p>
          <p><strong>Course:</strong> <%= note.course %></p>

          <p style="display: flex; align-items: center;"><strong>Uploaded by:</strong> <%= note.uploadedBy?.username || "Unknown" %>
            <% if (note.uploadedBy?.roles?.isModerator) { %>
              <img src="/images/blueCheckmark.svg" alt="Moderator" width="15">
            <% } else if (note.uploadedBy?.roles?.isDev) { %>
              <img src="/images/icons8-checkmark.svg" alt="Developer" width="15">
            <% } else if (note.uploadedBy?.verification?.verified) { %>
              <span style="color: green; font-size: 0.8rem;">âœ”</span>
            <% } %>
          </p>

          <p><strong>Downloads:</strong> <%= note.downloadCount %></p>
          <time><%= note.createdAt ? note.createdAt.toDateString() : 'Date not available' %></time>
          <a href="/notes/<%= note._id %>" class="view-link">ðŸ“„ View Note</a>
        </div>
      <% }) %>
    </div>
    <div id="load-more-container" style="text-align:center; margin-top:20px;">
      <% if (currentPage < totalPages) { %>
        <button id="loadMoreBtn" class="view-link">Load More</button>
      <% } %>
    </div>

    <div class="disclaimer-box" style="text-align: center; margin-bottom: 25px;">
      <strong>Important:</strong> Notes are for reference only. Your grades depend
      on your own efforts and official course material.
  </div>

  <% } %>
</div>

<script>
  function toggleFilters() {
    document.getElementById('filterSidebar').classList.toggle('open');
  }

  let currentPage = <%= currentPage %>;
const totalPages = <%= totalPages %>;
const loadMoreBtn = document.getElementById("loadMoreBtn");
const grid = document.querySelector(".note-grid");

if (loadMoreBtn) {
  loadMoreBtn.addEventListener("click", async () => {
    currentPage++;
    if (currentPage > totalPages) return;

    const params = new URLSearchParams({
      q: "<%= query || '' %>",
      course: "<%= course || '' %>",
      semester: "<%= semester || '' %>",
      visibility: "<%= visibility || '' %>",
      page: currentPage
    });

    const res = await fetch("/explore?" + params.toString(), {
      headers: { "Accept": "application/json" }
    });
    const data = await res.json();

    data.notes.forEach(note => {
      const card = document.createElement("div");
      card.className = "note-card";

      // uploaded by logic
      let uploadedBy = note.uploadedBy?.username || "Unknown";
      if (note.uploadedBy?.roles?.isModerator) {
        uploadedBy += ` <img src="/images/blueCheckmark.svg" alt="Moderator" width="15">`;
      } else if (note.uploadedBy?.roles?.isDev) {
        uploadedBy += ` <img src="/images/icons8-checkmark.svg" alt="Developer" width="15">`;
      } else if (note.uploadedBy?.verification?.verified) {
        uploadedBy += ` <span style="color: green; font-size: 0.8rem;">âœ”</span>`;
      }

      card.innerHTML = `
        <h3>${note.title}</h3>
        <p><strong>Subject:</strong> ${note.subject?.name || 'N/A'}</p>
        <p><strong>Course:</strong> ${note.course}</p>
        <p style="display: flex; align-items: center;"><strong>Uploaded by:</strong> ${uploadedBy}</p>
        <p style="display: flex; align-items: center;"><strong>Downloads:</strong> ${note.downloadCount}</p>
        <time>${note.createdAt ? new Date(note.createdAt).toDateString() : 'Date not available'}</time>
        <a href="/notes/${note._id}" class="view-link">ðŸ“„ View Note</a>
      `;

      grid.appendChild(card);
    });


    if (currentPage >= totalPages) {
      loadMoreBtn.style.display = "none";
    }
  });
}
</script>
